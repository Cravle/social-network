{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","assets/img/heart.svg","assets/img/heart-clicked.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","content","onDoubleClick","value","onBlur","updateUserStatus","autoFocus","onChange","e","currentTarget","ProfileInfo","profile","myPage","info","ava","ava__wrapper","src","photos","large","userPhoto","alt","description","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","Post","wrapper","small","inner","name","message","likeWrapper","count","likesCount","imgWrapper","onClick","toggleLike","id","like","liked","heartClicked","heart","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","postWrapper","Field","component","PostTextArea","validate","required","type","errorclass","errorMsg","placeholder","btnWrapper","btn","MyPosts","React","memo","postsElements","posts","map","p","empty","title","formData","addPost","post","MyPostsContainer","connect","state","profilePage","newPostText","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.885fd1ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPage\":\"ProfileInfo_myPage__qIqaN\",\"content\":\"ProfileInfo_content__1SQ6S\",\"shapka\":\"ProfileInfo_shapka__144_l\",\"info\":\"ProfileInfo_info__ekJ1m\",\"ava__wrapper\":\"ProfileInfo_ava__wrapper__2FSP1\",\"ava\":\"ProfileInfo_ava__2l-CH\",\"item\":\"ProfileInfo_item__3uLQq\",\"description\":\"ProfileInfo_description__3rUqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileStatus_content__2z6HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyPosts_wrapper__16PAJ\",\"empty\":\"MyPosts_empty__3K6WB\",\"content\":\"MyPosts_content__sv91D\",\"title\":\"MyPosts_title__1yH9S\",\"posts\":\"MyPosts_posts__OPSoo\",\"btn\":\"MyPosts_btn__1YUpc\",\"postWrapper\":\"MyPosts_postWrapper__16BZD\",\"btnWrapper\":\"MyPosts_btnWrapper__XTG3L\",\"errorMsg\":\"MyPosts_errorMsg__3GPs9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__UkLBE\",\"ava\":\"Post_ava__2l_gx\",\"name\":\"Post_name__3KAzj\",\"inner\":\"Post_inner__3DCT-\",\"likeWrapper\":\"Post_likeWrapper__L9B9m\",\"count\":\"Post_count__3PRel\",\"imgWrapper\":\"Post_imgWrapper__3MHvC\",\"like\":\"Post_like__39Ij6\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileStatus.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateUserStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div className={s.content}>\n            {!editMode &&\n            <h3 onDoubleClick={activateEditMode} value={status}>\n                {status || \"-----\"}\n            </h3>\n            }\n            {editMode &&\n            <input\n                onBlur={deactivateEditMode}\n                autoFocus={true}\n                onChange={onStatusChange}\n                value={status}\n            />\n            }\n        </div>\n    )\n\n}\n\nexport default ProfileStatusWithHooks\n","import React from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../comoon/preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/img/user.jpg\";\n\n//TODO отобразить всю инфу с  https://social-network.samuraijs.com/api/1.0/profile/2\nconst ProfileInfo = ({profile, status, updateUserStatus, ...props}) => {\n    if (!profile) {\n        return <Preloader/>\n    } else\n        return (\n            <div className={s.myPage}>\n\n\n                <div className={s.info}>\n                    <div className={s.ava}>\n                        <div className={s.ava__wrapper}>\n                            <img\n                                src={profile.photos.large || userPhoto}\n                                alt=\"\"/>\n                        </div>\n                    </div>\n                    <div className={s.description}>\n                        <h1>{profile.fullName || \"Vladyslav Loboda\"}</h1>\n\n                        <ProfileStatusWithHooks\n                            status={status}\n                            updateUserStatus={updateUserStatus}\n                        />\n\n                        <div>{profile.aboutMe}</div>\n                        <div>{profile.lookingForAJob ?\n                            `В поиске работы: ${profile.lookingForAJobDescription}` :\n                            \"Работу не ищу\"}</div>\n                        <div>social links:</div>\n\n                    </div>\n\n                </div>\n            </div>\n        )\n}\n\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/heart.c31d61db.svg\";","export default __webpack_public_path__ + \"static/media/heart-clicked.fb824694.svg\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/img/user.jpg\";\r\nimport heart from \"../../../../assets/img/heart.svg\";\r\nimport heartClicked from \"../../../../assets/img/heart-clicked.svg\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <img className={s.ava}\r\n                 src={props.profile && props.profile.photos.small ? props.profile.photos.small : userPhoto}\r\n                 alt=\"\"/>\r\n            <div className={s.inner}>\r\n                <div className={s.content}>\r\n                    <h4 className={s.name}>{props.profile && props.profile.fullName}</h4>\r\n                    {props.message}\r\n                </div>\r\n                <div className={s.likeWrapper}>\r\n\r\n                    <div className={s.count}>\r\n                        {props.likesCount}\r\n                    </div>\r\n                    <div className={s.imgWrapper} onClick={() => props.toggleLike(props.id)}>\r\n                        <img className={s.like} src={props.liked ? heartClicked : heart} alt=\"\"/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {PostTextArea} from \"../../comoon/FormsCntrols/FormsControls\";\r\n\r\n//TODO загрузка профиле во время загрузки приложения\r\nconst maxLength10 = maxLengthCreator(100);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.postWrapper}>\r\n            <Field\r\n                component={PostTextArea}\r\n                validate={[required, maxLength10]}\r\n                type={\"text\"}\r\n                name={'post'}\r\n                errorclass={s.errorMsg}\r\n                placeholder={'Type your thoughts...'}\r\n\r\n            />\r\n\r\n            <div className={s.btnWrapper}>\r\n                <button type={\"submit\"} className={s.btn}>Add post\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('post'));\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'post',\r\n    onSubmitSuccess: afterSubmit,\r\n})(PostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message}\r\n                                                   key={p.id}\r\n                                                   likesCount={p.likesCount}\r\n                                                   liked={p.liked}\r\n                                                   profile={props.profile}\r\n                                                   toggleLike={props.toggleLike}\r\n                                                   id={p.id}\r\n    />)\r\n\r\n    let onSubmit = (formData) => {\r\n\r\n        props.addPost(formData.post);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.empty}/>\r\n\r\n            <div className={s.posts}>\r\n                <h4 className={s.title}>My posts</h4>\r\n                <PostReduxForm onSubmit={onSubmit}\r\n                />\r\n                {postsElements}\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nexport default MyPosts;","import {addPost, toggleLike} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addPost: (newPostText) => {\r\n//             dispatch(addPost(newPostText));\r\n//         }\r\n//\r\n//     }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, toggleLike})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer profile={props.profile}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n    \r\n    }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}