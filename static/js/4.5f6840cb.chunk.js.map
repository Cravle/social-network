{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","assets/img/send.svg","components/Dialogs/Dialogs.jsx","hoc/withAuthReditect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","name","className","s","dialog","activeClassName","active","to","wrapper","onClick","afterSelectedChat","src","avaUrl","alt","ava","dialogName","dialogMessage","Message","fromOwner","messageFromOwner","messageInner","ownerName","message","ownerAva","messageWrapper","maxLength100","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","areaWrapper","Field","component","MessageTextArea","errorclass","errorMsgAbs","type","validate","required","cols","rows","placeholder","button","sendImg","send","Dialogs","React","useState","match","params","chatId","isChatSelected","setIsChatSelected","selectedChat","setSelectedChat","isFromOwner","setIsFromOwner","chatUser","dialogs","useEffect","dialogsElements","map","d","messagesElements","messages","m","onSendMessageClick","formData","sendMessage","owner","fullName","photos","small","user","isAuth","dialogsItems","messagesWrapper","selectUser","render","mapStateToPropsForRedirect","state","auth","compose","withRouter","connect","dialogsPage","newMessage","profilePage","addMessageCreator","Component","RedirectComponent","this"],"mappings":"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","file":"static/js/4.5f6840cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37jdO\",\"dialogsItems\":\"Dialogs_dialogsItems__1OitB\",\"messagesWrapper\":\"Dialogs_messagesWrapper__2cdLT\",\"selectUser\":\"Dialogs_selectUser__307n1\",\"areaWrapper\":\"Dialogs_areaWrapper__sWMQo\",\"textarea\":\"Dialogs_textarea__1aFI1\",\"button\":\"Dialogs_button__12gTk\",\"sendImg\":\"Dialogs_sendImg__2dilT\",\"errorMsgAbs\":\"Dialogs_errorMsgAbs__1bPar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"DialogItem_ava__3qTgb\",\"wrapper\":\"DialogItem_wrapper__2wIN-\",\"dialogMessage\":\"DialogItem_dialogMessage__2R-gt\",\"dialogName\":\"DialogItem_dialogName__3rWJg\",\"dialog\":\"DialogItem_dialog__2J2z5\",\"active\":\"DialogItem_active__2bAjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1HEEr\",\"messageFromOwner\":\"Message_messageFromOwner__2Fr8c\",\"messageWrapper\":\"Message_messageWrapper__zSbfZ\",\"messageInner\":\"Message_messageInner__1lMz3\",\"message\":\"Message_message__1VndY\",\"ava\":\"Message_ava__t7ROW\",\"name\":\"Message_name__1Y2lm\"};","import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`,\r\n        name = props.name;\r\n    return (\r\n        <div>\r\n            <NavLink className={s.dialog} activeClassName={s.active} to={path}>\r\n                <div className={s.wrapper} onClick={props.afterSelectedChat}>\r\n                    <img src={props.avaUrl} alt=\"\" className={s.ava}/>\r\n                    <div>\r\n                        <div className={s.dialogName}>\r\n                            {name}\r\n                        </div>\r\n                        <div className={s.dialogMessage}>message</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.css'\n\n//TODO исправить баг с сообщениями\n\nconst Message = (props) => {\n    if (props.fromOwner)\n        return (\n            <div className={s.messageFromOwner}>\n\n                <div className={s.messageInner}>\n                    <div className={s.name}>{props.fromOwner ? props.ownerName : props.name}</div>\n\n                    <div className={s.message}>{props.message}</div>\n                </div>\n                <img className={s.ava} src={props.fromOwner ? props.ownerAva : props.avaUrl}\n                     alt=\"$\"/>\n\n            </div>\n        )\n    return (\n        <div className={s.messageWrapper}>\n\n            <img className={s.ava} src={props.fromOwner ? props.ownerAva : props.avaUrl} alt=\"$\"/>\n            <div>\n                <div className={s.name}>{props.fromOwner ? props.ownerName : props.name}</div>\n\n                <div className={s.message}>{props.message}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Message;","export default __webpack_public_path__ + \"static/media/send.1ed8f4b2.svg\";","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reset, reduxForm} from \"redux-form\";\r\nimport {MessageTextArea} from \"../comoon/FormsCntrols/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport send from \"../../assets/img/send.svg\";\r\nimport user from \"../../assets/img/user.jpg\"\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} className={s.areaWrapper}>\r\n            <Field\r\n                component={MessageTextArea}\r\n                errorclass={s.errorMsgAbs}\r\n                type={\"text\"}\r\n                validate={[required, maxLength100]}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                cols=\"10\"\r\n                rows=\"50\"\r\n                placeholder={\"write a message\"}\r\n            />\r\n            <button className={s.button}>\r\n                <img\r\n                    className={s.sendImg}\r\n                    src={send}\r\n                    alt=\"send\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('message'));\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'message',\r\n    onSubmitSuccess: afterSubmit,\r\n})(MessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const [isChatSelected, setIsChatSelected] = React.useState(!!props.match.params.chatId);\r\n    const [selectedChat, setSelectedChat] = React.useState(props.match.params.chatId);\r\n    const [isFromOwner, setIsFromOwner] = React.useState(false);\r\n\r\n    const chatUser = props.dialogs[selectedChat - 1];\r\n\r\n    const afterSelectedChat = () => {\r\n        setIsChatSelected(true);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setIsChatSelected(!!props.match.params.chatId)\r\n        setSelectedChat(props.match.params.chatId)\r\n    }, [props.match.params.chatId])\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n            setIsFromOwner(false);\r\n        }\r\n    }, [])\r\n\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem id={d.id}\r\n                                                             key={d.id}\r\n                                                             name={d.name}\r\n                                                             avaUrl={d.avaUrl}\r\n                                                             afterSelectedChat={afterSelectedChat}\r\n    />,);\r\n\r\n    let messagesElements = props.messages.map(m => <Message message={m.message}\r\n                                                            key={m.id}\r\n                                                            chatId={selectedChat}\r\n                                                            avaUrl={chatUser?.avaUrl}\r\n                                                            ownerAva={m.avaUrl}\r\n                                                            name={chatUser?.name}\r\n                                                            fromOwner={m.fromOwner}\r\n                                                            ownerName={m.name}\r\n                                                            isFromOwner={isFromOwner}\r\n\r\n    />);\r\n\r\n\r\n    let onSendMessageClick = (formData) => {\r\n        setIsFromOwner(true);\r\n        props.sendMessage(formData.message, props.owner.fullName, props.owner.photos.small || user);\r\n    }\r\n\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            {!isChatSelected && <div className={\r\n                s.messagesWrapper}>\r\n                <div className={s.selectUser}>\r\n                    Select a chat to start messaging\r\n\r\n                </div>\r\n            </div>\r\n            }\r\n            <Route path=\"/dialogs/:chatId\" render={() => <div className={s.messagesWrapper}>\r\n                {messagesElements}\r\n                <MessageReduxForm onSubmit={onSendMessageClick}/>\r\n            </div>}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                \n                return <Redirect to={\"/login\"}/>\n            }\n            return <Component {...this.props}/>\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import {addMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthReditect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\n//TODO Сообщение от меня в одном углу, от собеседника - в другом\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessage: state.dialogsPage.newMessage,\r\n        owner: state.profilePage.owner\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage, name, avaUrl) => {\r\n            dispatch(addMessageCreator(newMessage, name, avaUrl));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)\r\n(Dialogs);"],"sourceRoot":""}