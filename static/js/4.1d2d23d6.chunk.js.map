{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","assets/img/send.svg","components/Dialogs/Dialogs.jsx","hoc/withAuthReditect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","name","className","s","dialog","activeClassName","active","to","wrapper","src","avaUrl","alt","ava","dialogName","dialogMessage","Message","messageWrapper","message","maxLength100","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","areaWrapper","Field","component","MessageTextArea","errorclass","errorMsgAbs","type","validate","required","cols","rows","placeholder","button","sendImg","send","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","messagesWrapper","formData","sendMessage","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","newMessage","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/4.1d2d23d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37jdO\",\"dialogsItems\":\"Dialogs_dialogsItems__1OitB\",\"messagesWrapper\":\"Dialogs_messagesWrapper__2cdLT\",\"areaWrapper\":\"Dialogs_areaWrapper__sWMQo\",\"textarea\":\"Dialogs_textarea__1aFI1\",\"button\":\"Dialogs_button__12gTk\",\"sendImg\":\"Dialogs_sendImg__2dilT\",\"errorMsgAbs\":\"Dialogs_errorMsgAbs__1bPar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"DialogItem_ava__3qTgb\",\"wrapper\":\"DialogItem_wrapper__2wIN-\",\"dialogMessage\":\"DialogItem_dialogMessage__2R-gt\",\"dialogName\":\"DialogItem_dialogName__3rWJg\",\"dialog\":\"DialogItem_dialog__2J2z5\",\"active\":\"DialogItem_active__2bAjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1HEEr\",\"messageWrapper\":\"Message_messageWrapper__zSbfZ\",\"message\":\"Message_message__1VndY\",\"ava\":\"Message_ava__t7ROW\",\"name\":\"Message_name__1Y2lm\"};","import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`,\r\n        name = props.name;\r\n    return (\r\n        <div>\r\n            <NavLink className={s.dialog} activeClassName={s.active} to={path}>\r\n                <div className={s.wrapper}>\r\n                    <img src={props.avaUrl} alt=\"\" className={s.ava}/>\r\n                    <div>\r\n                        <div className={s.dialogName}>\r\n                            {name}\r\n                        </div>\r\n                        <div className={s.dialogMessage}>message</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.css'\n\n\nconst Message = (props) => {\n    \n    return (\n        <div className={s.messageWrapper}>\n\n            <img className={s.ava} src={props.avaUrl} alt=\"$\"/>\n            <div>\n                <div className={s.name}>Name</div>\n\n                <div className={s.message}>{props.message}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Message;","export default __webpack_public_path__ + \"static/media/send.1ed8f4b2.svg\";","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reset, reduxForm} from \"redux-form\";\r\nimport {MessageTextArea} from \"../comoon/FormsCntrols/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport send from \"../../assets/img/send.svg\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} className={s.areaWrapper}>\r\n            <Field\r\n                component={MessageTextArea}\r\n                errorclass={s.errorMsgAbs}\r\n                type={\"text\"}\r\n                validate={[required, maxLength100]}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                cols=\"10\"\r\n                rows=\"50\"\r\n                placeholder={\"write a message\"}\r\n            />\r\n            <button className={s.button}>\r\n                <img\r\n                    className={s.sendImg}\r\n                    src={send}\r\n                    alt=\"send\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('message'));\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'message',\r\n    onSubmitSuccess: afterSubmit,\r\n})(MessageForm)\r\n\r\n//TODO Сообщение от меня в одном углу, от собеседника - в другом\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem id={d.id}\r\n                                                             key={d.id}\r\n                                                             name={d.name}\r\n                                                             avaUrl={d.avaUrl}/>,);\r\n    let messagesElements = props.messages.map(m => <Message message={m.message}\r\n                                                            key={m.id}\r\n                                                            avaUrl={m.avaUrl}/>);\r\n\r\n\r\n    let onSendMessageClick = (formData) => {\r\n        props.sendMessage(formData.message);\r\n\r\n    }\r\n\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesWrapper}>\r\n                {messagesElements}\r\n                <MessageReduxForm onSubmit={onSendMessageClick}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                \n                return <Redirect to={\"/login\"}/>\n            }\n            return <Component {...this.props}/>\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import {addMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthReditect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n//TODO Сообщение от меня в одном углу, от собеседника - в другом\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessage: state.dialogsPage.newMessage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(addMessageCreator(newMessage));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}